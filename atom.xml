<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Moonlord&#39;s Bog</title>
  
  <subtitle>一千个人就有一千种生存方式和生活道路，要想改变一些事情，首先得把自己给找回来。Fighting!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-02T05:03:02.936Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>moonlord</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java基础回顾</title>
    <link href="http://yoursite.com/2019/12/02/java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE/"/>
    <id>http://yoursite.com/2019/12/02/java%E5%9F%BA%E7%A1%80%E5%9B%9E%E9%A1%BE/</id>
    <published>2019-12-02T04:45:43.000Z</published>
    <updated>2019-12-02T05:03:02.936Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、数据类型"><a href="#一、数据类型" class="headerlink" title="一、数据类型"></a>一、数据类型</h4><p><strong>1. 1 标识符 关键字</strong></p><ul><li>标识符<ul><li>标识符可以由字母、数字、下划线（_）、美元符（$）组成，但不能包含 @、%、空格等其它特殊字符。<ul><li>不能以数字开头 </li><li>标识符是严格区分大小写的。 </li><li>标识符的命名最好能反映出其作用，做到见名知意。 </li></ul></li></ul></li><li>关键字<ul><li>java语言中已经被赋予特定意义的一些单词。一共有53个关键字。其中有两个保留字:const和goto。关键字不能被用作标识符！</li></ul></li></ul><p><strong>1.2  基本数据类型</strong></p><table><thead><tr><th align="center">类型名称</th><th align="center">字节空间</th><th align="center">范围</th></tr></thead><tbody><tr><td align="center">byte</td><td align="center">1</td><td align="center">-27到27-1  或者  -128到127</td></tr><tr><td align="center">short</td><td align="center">2</td><td align="center">-215到215-1</td></tr><tr><td align="center">int</td><td align="center">4</td><td align="center">-231到231-1</td></tr><tr><td align="center">long</td><td align="center">8</td><td align="center">-263到263-1</td></tr><tr><td align="center">float</td><td align="center">4</td><td align="center">单精度，对小数部分的精度要求不高</td></tr><tr><td align="center">double</td><td align="center">8</td><td align="center">双精度，精确的小数部分并操作值很大时</td></tr><tr><td align="center">char</td><td align="center">2</td><td align="center">0到65535</td></tr><tr><td align="center">boolean</td><td align="center">1</td><td align="center">真true 假false</td></tr></tbody></table><p><strong>1.3 基本数据类型的字面值</strong></p><ul><li>整数字面值是int类型</li><li>byte,short,char三种比int小的整数可以用范围内的的值直接赋值</li><li>浮点数的字面值是double类型</li><li>字面值后缀LFD</li><li>进制前缀（0x,0,\u）</li></ul><p><strong>1.4 基本类型的类型转换</strong></p><p>​    byte—&gt;short—&gt;int—&gt;long—&gt;float—&gt;double</p><ul><li>小到大/隐式转换，直接赋值</li><li>大到小/显式转换，需要强制类型转换</li><li>浮点数转成整数，小数直接舍弃</li></ul><p><strong>1.5 运算规则</strong></p><ul><li><p>计算结果的数据类型，与最大类型一致</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="number">3</span>/<span class="number">2</span>);  <span class="comment">//1,int/int</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="number">3.0</span>/<span class="number">2</span>);  <span class="comment">//1.5,double/int</span></span></pre></td></tr></table></figure></li><li><p>byte,short,char三种比int小的整数，运算时会先自动转换成int</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> a = <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> b = <span class="number">2</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//等号右面在做加法运算时会把结果自动提升为大类型int，左面的c小类型放不开，需要强转</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> c = (<span class="keyword">byte</span>) (a+b);</span></pre></td></tr></table></figure></li><li><p>整数运算溢出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">计算：光速运行一年的长度是多少米</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="number">300000000L</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>*<span class="number">365</span>);<span class="comment">//运算结果的字面值仍然是int类型，但是早已超出int范围，需要加后缀L扩大数据范围</span></span></pre></td></tr></table></figure></li><li><p>浮点数运算不精确</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="number">1</span>-<span class="number">0.8</span>); <span class="comment">//0.19999999999999996</span></span></pre></td></tr></table></figure></li></ul><ul><li><p>浮点数的特殊值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Infinity 无穷大 <span class="number">3.14</span>/<span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Nan not a number  <span class="number">0</span>/<span class="number">0.0</span></span></pre></td></tr></table></figure></li></ul><p><strong>1.6 运算符</strong></p><ul><li>算数运算符：+    -    *    /    %    ++    –</li><li>比较运算符：&gt;    &lt;    ==    &gt;=    &lt;=    !=</li><li>逻辑运算符： &amp;&amp;     ||     !     &amp;    |</li><li>三元运算符：？ ：    三项运算1 ? 2 : 3，1是真取2，1是假取3</li><li>赋值运算符：=    +=    -=    *=    /=</li></ul><h4 id="二、流程控制"><a href="#二、流程控制" class="headerlink" title="二、流程控制"></a>二、流程控制</h4><p><strong>2.1 分支结构</strong></p><ul><li>if</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">单分支</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(判断条件)&#123;满足条件的代码...&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">双分支</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(判断条件)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    满足条件的代码...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    不满足条件的代码...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">嵌套分支</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(判断条件<span class="number">1</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    代码<span class="number">1</span>...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(判断条件<span class="number">2</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    代码<span class="number">2</span>...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(判断条件<span class="number">3</span>)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    代码<span class="number">3</span>...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    谁都不满足的代码...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><ul><li>switch-case-default<ul><li>只能判断byte,short,char,int</li><li>enum,枚举</li><li>jdk1.7后 String</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(判断条件)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">0</span> : syso(<span class="number">0</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">1</span> : syso(<span class="number">1</span>);<span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">2</span> : syso(<span class="number">2</span>);<span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="number">3</span> : syso(<span class="number">3</span>);<span class="keyword">break</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">default</span>: syso(<span class="string">"default"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>2.2 循环结构</strong></p><ul><li>for循环</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(开始条件;判断条件;更改条件)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    循环体;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><ul><li>while循环 —先判断再执行</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(循环条件)&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    循环体代码…</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><ul><li>do-while循环 —先执行再判断</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    代码…</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">while</span>(执行条件);</span></pre></td></tr></table></figure><p><strong>2.3 嵌套for循环</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(开始条件;判断条件;更改条件)&#123;<span class="comment">//外循环</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    循环体;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span>(开始条件;判断条件;更改条件)&#123;<span class="comment">//内循环</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">       循环体;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>2.4 continue 和 break</strong></p><ul><li>break 和 continue 都可以用来控制循环结构，区别是： <ul><li>break 用于中断当前循环，即当前循环完全结束。 </li><li>continue 用于结束本次循环，即跳过 continue 后面的代码，继续执行下一次循环。</li><li>break 还可以用在 switch case 语句中，用于中断 switch case 语句。</li></ul></li></ul><h3 id="三、数组"><a href="#三、数组" class="headerlink" title="三、数组"></a>三、数组</h3><p><strong>3.1 数组概念</strong></p><ul><li>数组Array，标志是[ ]。</li><li>是用于储存多个相同类型数据的集合。</li><li>想要获取数组中的元素值，可以通过脚标（下标）来获取，下标是从0开始的</li></ul><p>*<em>3.2 创建数组 *</em></p><ul><li>动态初始化：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">5</span>];</span></pre></td></tr></table></figure><ul><li>静态初始化:</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] b = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[] c = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span></pre></td></tr></table></figure><p><strong>3.2 长度属性</strong></p><ul><li>length属性 </li><li>数组一旦创建，长度不可变</li><li>允许0长度的数组</li></ul><p><strong>3.3 数组遍历</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length;i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">sout(a[i]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p><strong>3.4 数组工具类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">Arrays.sort(a)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">Arrays.binarySearch(a, 目标值)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">Arrays.copyOf(a, 长度)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Arrays.toString(a)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">Arrays.copyOf(a, 长度)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">System.arraycopy(原数组,原数组起始位置,目标数组,目标数组起始位置,复制的数据数量)</span></pre></td></tr></table></figure><p><strong>3.5 二维数组</strong></p><ul><li>存放数组的数组</li></ul><p><strong>3.6 方法递归</strong></p><ul><li>方法中调用自身</li><li>一步一步地简化问题,把问题简化到最简问题,再向前倒推求出结果</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(n==<span class="number">0</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">   <span class="keyword">return</span> <span class="number">1</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> n*f(n-<span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、数据类型&quot;&gt;&lt;a href=&quot;#一、数据类型&quot; class=&quot;headerlink&quot; title=&quot;一、数据类型&quot;&gt;&lt;/a&gt;一、数据类型&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1. 1 标识符 关键字&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识符&lt;ul&gt;
&lt;li
      
    
    </summary>
    
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
</feed>
